
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sadik
 */
public class ExportPopUp extends javax.swing.JDialog {

    /**
     * Creates new form ExportPopUp
     */
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    AdminControl ac;
    DefaultTableModel model;
    public ExportPopUp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        exportPopUpTable();
        ac = (AdminControl)parent;
    }
    
    public void exportPopUpTable(){
        con = DBConnection.getConnection();
        ResultSetMetaData rsmt;
        int columnCounter;
        
        String sql = "select * from transport";
        try {
            pst = con.prepareStatement(sql);
            rs=pst.executeQuery();
            rsmt = rs.getMetaData();
            columnCounter = rsmt.getColumnCount();
            Vector<String> column = new Vector<String>();
            
            //column.addElement("Token");
            column.addElement("Truck Number");
            column.addElement("RST");
            column.addElement("Date of Entry");
            column.addElement("Tare Weight");
            column.addElement("Driver Name");
            column.addElement("Gross Weight");
            column.addElement("Exporting Place");
            column.addElement("Number of Bags");
            column.addElement("Bag Type");
            column.addElement("Builty");
            column.addElement("Labour Group");
            column.addElement("Net Weight with Bag");
            column.addElement("Net Weight without Bag");
            column.addElement("Load verified");
            
            
//            for(int i=2;i<=columnCounter;i++){
//                column.add(rsmt.getColumnClassName(i));
//            }
            Vector data = new Vector();
            Vector row = new Vector();
            float sum=0;
            while(rs.next()){
                row = new Vector(columnCounter);
                for(int i=1;i<=columnCounter;i++){
                    if(i==14){
                        if(rs.getString(i).equals("1")){
                            row.add("Yes");
                        }else{
                            row.add("No");
                        }
                    }else{
                        row.add(rs.getString(i));
                        if(i==13){
                            sum += Float.valueOf(rs.getString(13));
                        }
                    }
                    
                }
                data.add(row);
            }
            DefaultTableModel model = (DefaultTableModel) exportPopUpTable.getModel();
            model.setDataVector(data, column);
            totalTruckTF.setText(String.valueOf(data.size()));
            totalExportNetWTF.setText(String.valueOf(sum));
            
        } catch (SQLException ex) {
            Logger.getLogger(AdminControl.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        exportPopUpTable = new javax.swing.JTable();
        exportReportGenerateBtn = new javax.swing.JButton();
        exportTableSearchField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        totalTruckTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        totalExportNetWTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        exportPopUpTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        exportPopUpTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exportPopUpTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exportPopUpTableMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exportPopUpTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exportPopUpTableMouseReleased(evt);
            }
        });
        exportPopUpTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                exportPopUpTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                exportPopUpTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(exportPopUpTable);

        exportReportGenerateBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        exportReportGenerateBtn.setText("Generate Report");
        exportReportGenerateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportReportGenerateBtnActionPerformed(evt);
            }
        });

        exportTableSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                exportTableSearchFieldKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon("C:\\Users\\sadik\\Desktop\\icon\\if_search_173095.png")); // NOI18N
        jLabel14.setText("Search");

        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("* Bag Type: 1 means jute ,2 means PP");

        jLabel3.setForeground(new java.awt.Color(255, 51, 0));
        jLabel3.setText("* To generate Excel Report file close old report Excel file first, if it's already opened!!!");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Total Truck");

        totalTruckTF.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Total Net Weight of Without Bags ");

        totalExportNetWTF.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(94, 94, 94)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(513, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(exportReportGenerateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(totalTruckTF, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel4)
                .addGap(30, 30, 30)
                .addComponent(totalExportNetWTF, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(30, 30, 30)
                .addComponent(exportTableSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(exportTableSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4)
                        .addComponent(totalExportNetWTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(totalTruckTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(exportReportGenerateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportPopUpTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportPopUpTableMouseClicked
        
       DefaultTableModel model = (DefaultTableModel) exportPopUpTable.getModel();
       int rowIndex = exportPopUpTable.getSelectedRow();
       if( exportPopUpTable.getRowSorter()!=null){
           rowIndex=exportPopUpTable.getRowSorter().convertRowIndexToModel(rowIndex);
       }
       String s1 = model.getValueAt(rowIndex,0)==null?"":model.getValueAt(rowIndex,0).toString();
       String s2 = model.getValueAt(rowIndex,1)==null?"":model.getValueAt(rowIndex,1).toString();
       String s3 = model.getValueAt(rowIndex,2)==null?"":model.getValueAt(rowIndex,2).toString();
       String s4 = model.getValueAt(rowIndex,3)==null?"":model.getValueAt(rowIndex,3).toString();
       String s5 = model.getValueAt(rowIndex,4)==null?"":model.getValueAt(rowIndex,4).toString();
       String s6 = model.getValueAt(rowIndex,5)==null?"":model.getValueAt(rowIndex,5).toString();
       String s7 = model.getValueAt(rowIndex,6)==null?"":model.getValueAt(rowIndex,6).toString();
       String s8 = model.getValueAt(rowIndex,7)==null?"":model.getValueAt(rowIndex,7).toString();
       String s9 = model.getValueAt(rowIndex,8)==null?"":model.getValueAt(rowIndex,8).toString();
       String s10 = model.getValueAt(rowIndex,9)==null?"":model.getValueAt(rowIndex,9).toString();
       String s11= model.getValueAt(rowIndex,10)==null?"":model.getValueAt(rowIndex,10).toString();
       String s12= model.getValueAt(rowIndex,11)==null?"":model.getValueAt(rowIndex,11).toString();
       String s13= model.getValueAt(rowIndex,11)==null?"":model.getValueAt(rowIndex,12).toString();
       String s14= model.getValueAt(rowIndex,11)==null?"":model.getValueAt(rowIndex,13).toString();
       
        
        ac.getExportPopUp(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14);  
        
        exportPopUpTable.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent mouseEvent) {
                if (mouseEvent.getClickCount() == 2) {
                    dispose();
                }
            }
        });
        
    }//GEN-LAST:event_exportPopUpTableMouseClicked

    private void exportPopUpTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exportPopUpTableKeyPressed
       DefaultTableModel model = (DefaultTableModel) exportPopUpTable.getModel();
       int rowIndex = exportPopUpTable.getSelectedRow();
       if( exportPopUpTable.getRowSorter()!=null){
           rowIndex=exportPopUpTable.getRowSorter().convertRowIndexToModel(rowIndex);
       }
       String s1 = model.getValueAt(rowIndex,0)==null?"":model.getValueAt(rowIndex,0).toString();
       String s2 = model.getValueAt(rowIndex,1)==null?"":model.getValueAt(rowIndex,1).toString();
       String s3 = model.getValueAt(rowIndex,2)==null?"":model.getValueAt(rowIndex,2).toString();
       String s4 = model.getValueAt(rowIndex,3)==null?"":model.getValueAt(rowIndex,3).toString();
       String s5 = model.getValueAt(rowIndex,4)==null?"":model.getValueAt(rowIndex,4).toString();
       String s6 = model.getValueAt(rowIndex,5)==null?"":model.getValueAt(rowIndex,5).toString();
       String s7 = model.getValueAt(rowIndex,6)==null?"":model.getValueAt(rowIndex,6).toString();
       String s8 = model.getValueAt(rowIndex,7)==null?"":model.getValueAt(rowIndex,7).toString();
       String s9 = model.getValueAt(rowIndex,8)==null?"":model.getValueAt(rowIndex,8).toString();
       String s10 = model.getValueAt(rowIndex,9)==null?"":model.getValueAt(rowIndex,9).toString();
       String s11= model.getValueAt(rowIndex,10)==null?"":model.getValueAt(rowIndex,10).toString();
       String s12= model.getValueAt(rowIndex,11)==null?"":model.getValueAt(rowIndex,11).toString();
       String s13= model.getValueAt(rowIndex,11)==null?"":model.getValueAt(rowIndex,12).toString();
       String s14= model.getValueAt(rowIndex,11)==null?"":model.getValueAt(rowIndex,13).toString();
       ac.getExportPopUp(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14);
       if(evt.getKeyCode()==10){
           dispose();
       }
    }//GEN-LAST:event_exportPopUpTableKeyPressed

    private void exportPopUpTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exportPopUpTableKeyReleased
        
    }//GEN-LAST:event_exportPopUpTableKeyReleased

    private void exportPopUpTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportPopUpTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_exportPopUpTableMouseEntered

    private void exportPopUpTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportPopUpTableMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportPopUpTableMousePressed

    private void exportPopUpTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportPopUpTableMouseReleased
        
    }//GEN-LAST:event_exportPopUpTableMouseReleased

    private void exportReportGenerateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportReportGenerateBtnActionPerformed
        double tWWithBag=0,tWWithoutBag=0;
        int totalBag=0;
        model = (DefaultTableModel) exportPopUpTable.getModel();
        RowSorter rs = exportPopUpTable.getRowSorter();
        int row = model.getRowCount();
        if(rs!=null){
            row=rs.getViewRowCount();
        }
        File file1 = new File("c:\\mandiReport");
        if(!file1.exists()){
            file1.mkdir();
                
            
        }
        File file = new File("c:\\mandiReport\\exportReport.xls");
        try {
            FileWriter out = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(out);
            for(int i=0;i<model.getColumnCount();i++){
                bw.write(model.getColumnName(i)+"\t");
            }
            bw.write("\n");
            int r=0;
            for(int i=0;i<row;i++){
                for(int j=0;j<model.getColumnCount();j++){
                    if(null==model.getValueAt(i,j)){
                        bw.write(""+"\t");
                    }else{
                        if(null==rs){
                            bw.write(model.getValueAt(i,j)+"\t");
                        }
                        else{
                            r = rs.convertRowIndexToModel(i);
                            bw.write(model.getValueAt(r,j)+"\t");
                        }
                    }
                }
                if(r==0){
                    totalBag+=Integer.parseInt(model.getValueAt(i,7).toString());
                    tWWithBag+=Double.parseDouble(model.getValueAt(i,11).toString());
                    tWWithoutBag+=Double.parseDouble(model.getValueAt(i,12).toString());
                }else{
                    totalBag+=Integer.parseInt(model.getValueAt(r,7).toString());
                    tWWithBag+=Double.parseDouble(model.getValueAt(r,11).toString());
                    tWWithoutBag+=Double.parseDouble(model.getValueAt(r,12).toString());
                }
                
                bw.write("\n");
            }
            bw.write("\n");
            for(int i=0;i<model.getColumnCount();i++){
                if(i==3){
                    bw.write("Total Truck");
                }else if(i==4){
                    bw.write(String.valueOf(row));
                }else if(i==6){
                    bw.write("Total");
                }
                else if(i==7){
                    bw.write(totalBag+"");
                }else if(i==11){
                    bw.write(tWWithBag+"");
                }else if(i==12){
                    bw.write(tWWithoutBag+"");
                }
                bw.write("\t");
            }
            bw.write("\n\n"+"\t"+"***The means of 1 is Jute and 2 is PP in bagType***"+"\t");
            bw.close();
            JOptionPane.showMessageDialog(null,"File saved in c:\\mandiReport\\exportReport.xls");
        } catch (IOException ex) {
            Logger.getLogger(ImportPopUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exportReportGenerateBtnActionPerformed

    private void exportTableSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exportTableSearchFieldKeyReleased
        model = (DefaultTableModel)exportPopUpTable.getModel();
        String search = exportTableSearchField.getText();//.toLowerCase();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(model);
        exportPopUpTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(search));
        calculateTotal(trs);
    }//GEN-LAST:event_exportTableSearchFieldKeyReleased

    private void calculateTotal(TableRowSorter trs){
        totalTruckTF.setText(String.valueOf(trs.getViewRowCount()));
        double sum = 0;
        for(int i=0;i<trs.getViewRowCount();i++){
            int r = trs.convertRowIndexToModel(i);
            sum += Double.valueOf((String)exportPopUpTable.getModel().getValueAt(r,12));   
        }
        totalExportNetWTF.setText(String.valueOf((float)sum));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExportPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExportPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExportPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExportPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ExportPopUp dialog = new ExportPopUp(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable exportPopUpTable;
    private javax.swing.JButton exportReportGenerateBtn;
    private javax.swing.JTextField exportTableSearchField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField totalExportNetWTF;
    private javax.swing.JTextField totalTruckTF;
    // End of variables declaration//GEN-END:variables
}
